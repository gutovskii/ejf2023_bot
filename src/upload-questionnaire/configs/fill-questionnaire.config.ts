import * as Joi from 'joi';
import { MainWizardContext, WizardQuiz } from 'src/common/types';

export interface FillQuestionnaireWizardContext extends MainWizardContext {
  wizard: {
    state: {
      fullName: string;
      position: string;
      technologies: string;
      bio: string;
      fileName: string;
    } & MainWizardContext['wizard']['state'];
  } & MainWizardContext['wizard'];
}

export const fillQuestionnaireWizardQuiz: WizardQuiz = {
  1: {
    question: "–í–∫–∞–∂–∏ —Å–≤–æ—î —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ (–∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é)",
    reply: '–§–∞–π–Ω–æ —î',
    errorMessage: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤–ø–∏—à–∏ ü§ì',
    validationSchema: Joi.string().regex(
      /[A-Z]{1}[a-z]{1,24}\s[A-Z]{1}[a-z]{1,35}/m,
    ),
  },
  2: {
    question:
      '–í–∫–∞–∂–∏ –ø–æ—Å–∞–¥—É, –Ω–∞ —è–∫—É –ø—Ä–µ—Ç–µ–Ω–¥—É—î—à (–Ω–∞–ø—Ä. Lead Backend CSS Developer)',
    reply: '–ú–æ—Ü–Ω–æ',
    errorMessage: '–ê–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç–∞ –Ω–µ –±—ñ–ª—å—à–µ 50 —Å–∏–º–≤–æ–ª—ñ–≤ üôÉ',
    validationSchema: Joi.string().regex(/^[a-zA-Z\,\.\-\‚Äî\s0-9]{10,50}$/),
  },
  3: {
    question:
      '–í–∫–∞–∂–∏ –¥–æ 10—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π/—Å–∫—ñ–ª—ñ–≤, —è–∫–∏–º–∏ —Ç–∏ –≤–æ–ª–æ–¥—ñ—î—à (–ü–∏—à–∏ —á–µ—Ä–µ–∑ –∫–æ–º—É)',
    reply: '–û—Ü–µ —Ç–∏ –º–æ–∑–∫ ü§Ø',
    errorMessage: '–¢–∏ –Ω–µ —Ç–µ –≤–ø–∏—Å–∞–≤, –¥–∞–≤–∞–π —â–µ —Ä–∞–∑ üôÉ',
    validationSchema: Joi.string().regex(
      /^(?:[\w\#\.\-\+\_\/\s]{1,35}\,\s?){0,10}[\w\#\.\-\+\_\/\s]{1,35}$/m,
    ),
  },
  4: {
    question:
      '–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –ø—Ä–æ —Å–µ–±–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é, –Ω–∞ —è–∫—É –ø–æ—Å–∞–¥—É –ø–æ–¥–∞—î—à—Å—è, –≤—ñ–¥ 100 –¥–æ 200 —Å–∏–º–≤–æ–ª—ñ–≤',
    reply: '–•–æ—Ä–æ—à',
    errorMessage: '–û–ø–∏—Å –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 100 –¥–æ 200 —Å–∏–º–≤–æ–ª—ñ–≤ —Ç–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é',
    validationSchema: Joi.string().regex(
      /^[a-zA-Z\,\.\-\‚Äî\'\`\"\;\#\@\!\(\)\$\s0-9]{100,200}$/,
    ),
  },
  5: {
    question: '–í–∫–∞–∂–∏ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä. Pes_Patron_Senior_Backend_ASM_CV)',
    reply: '–ù–µ–ø–æ–≥–∞–Ω–æ!',
    errorMessage: '–ê–Ω–≥–ª—ñ–π—Å—å–∫–æ—é, –¥–æ–∑–≤–æ–ª–µ–Ω—ñ —Å–∏–º–≤–æ–ª–∏, _,-, –≤—ñ–¥ 15 –¥–æ 60 —Å–∏–º–≤–æ–ª—ñ–≤',
    validationSchema: Joi.string().regex(/^[a-zA-Z0-9\_\-)]{10,60}$/),
  },
  6: {
    question: '–ó–∞–≤–∞–Ω—Ç–∞–∂ —Ñ–∞–π–ª. –¶–µ –º–∞—î –±—É—Ç–∏ .pdf –Ω–µ –±—ñ–ª—å—à–µ 5–º–± üôÇ',
    reply: '–°—É–ø–µ—Ä! –ê —Ç–µ–ø–µ—Ä –æ—á—ñ–∫—É–π —Å–≤–æ–≥–æ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞ üòä',
  },
};
