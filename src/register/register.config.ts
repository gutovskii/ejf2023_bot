import * as Joi from 'joi';
import { MainWizardContext, WizardQuiz } from 'src/common/types';

export interface RegisterWizardContext extends MainWizardContext {
  wizard: {
    state: {
      name: string;
      group: string;
      course: string;
      almaMater: string;
    } & MainWizardContext['wizard']['state'];
  } & MainWizardContext['wizard'];
}

export const registerWizardQuiz: WizardQuiz = {
  1: {
    question: "–ü–æ–¥—ñ–ª–∏—Å—å —Å–≤–æ—ó–º —ñ–º'—è–º üòä",
    reply: '–ö–ª–∞—Å, –≤–ø–∏—Å–∞–≤. –¢–æ–±—ñ –ª–∏—á–∏—Ç—å üòâ',
    errorMessage: "–Ü–º'—è –≤–ø–∏—à–∏ ü§ì",
    validationSchema: Joi.string().regex(/^[a-zA-Z–∞-—è–ê-–Ø“ê–Ñ–á–Ü—ñ\-]{2,25}$/),
  },
  2: {
    question: '–Ø–∫–∏–π —Ç–∏ –∫—É—Ä—Å?',
    reply: '–ê —Ç–∏ –ø–æ–≤–∞–∂–Ω–∏–π üòØ',
    errorMessage: '–í–∏–±–µ—Ä–∏ —â–æ—Å—å —ñ–∑ –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ ü§ì',
    validAnswers: [
      '–ü–µ—Ä—à–∏–π',
      '–î—Ä—É–≥–∏–π',
      '–¢—Ä–µ—Ç—ñ–π',
      '–ß–µ—Ç–≤–µ—Ä—Ç–∏–π',
      '–ú–∞–≥—ñ—Å—Ç—Ä–∞—Ç—É—Ä–∞',
      '–©–µ –≤ —à–∫–æ–ª—ñ',
      '–ù—ñ—á–æ–≥–æ –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–æ–≥–æ',
    ],
  },
  3: {
    question: '–î–µ –Ω–∞–≤—á–∞—î—à—Å—è? –í–ø–∏—à–∏ —Å–≤—ñ–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç, —è–∫—â–æ –Ω–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ',
    reply: '–û, –∞ –≤ –º–µ–Ω–µ —Ç–∞–º –∑–Ω–∞–π–æ–º–∏–π –≤—á–∏—Ç—å—Å—è üòÉ',
    errorMessage: '–í–ø–∏—à–∏ —Å–∫–æ—Ä–æ—á–µ–Ω–æ, —è–∫—â–æ –Ω–µ –ø–æ–º—ñ—Å—Ç–∏–ª–æ—Å—å üôÉ',
    validationSchema: Joi.string().regex(/^.{2,75}$/),
    possibleAnswers: [
      '–ù–£–õ–ü',
      '–õ–ù–£',
      '–ù–õ–¢–£',
      '–£–ö–£',
      '–õ–ù–ú–£',
      '–ù–ê–°–í',
      '–©–µ –≤ —à–∫–æ–ª—ñ',
      '–ó–∞–∫—ñ–Ω—á–∏–≤',
      '–ù—ñ—á–æ–≥–æ –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–æ–≥–æ',
    ],
  },
  4: {
    question: '–ß–∏ —Ç–∏ –ø–æ–≥–æ–¥–∂—É—î—à—Å—è –Ω–∞ –æ–±—Ä–æ–±–∫—É –¥–∞–Ω–∏—Ö? üôÇüôÇüôÇ',
    reply: '–í—ñ—Ç–∞—é! –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ, –≤–¥–∞–ª–æ–≥–æ –Ø—Ä–º–∞—Ä–∫—É! ‚ú®',
    errorMessage: '–¢—Ä–µ–±–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –¢–∞–∫ —Ç–∏–∫–Ω—É—Ç–∏, —Ç—ñ–ª—å–∫–∏ —Ç—Å—Å ü§´',
    validAnswers: ['–¢–∞–∫ üòé'],
  },
};
